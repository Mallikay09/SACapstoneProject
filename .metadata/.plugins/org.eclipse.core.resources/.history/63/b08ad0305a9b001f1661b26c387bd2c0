package com.Module1.Login;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;
import org.testng.ITestResult;
import org.testng.annotations.AfterClass;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.reporter.ExtentSparkReporter;

public class LoginTest {
	WebDriver driver;
    ExcelUtilsSample excel;
    ExtentReports extent;
    ExtentTest test;
    
    @BeforeClass
    public void setUp() {
        //System.setProperty("webdriver.chrome.driver", "path/to/chromedriver");
        driver = new ChromeDriver();
        excel = new ExcelUtilsSample("E:/SeleniumSAProject05112024/CapstoneProject/TestData/ExcelLogin.xlsx");

        ExtentSparkReporter sparkReporter = new ExtentSparkReporter("extentReports/OrangeHRMReport.html");
        extent = new ExtentReports();
        extent.attachReporter(sparkReporter);
    }
    
    
    

    @DataProvider(name = "loginData")
    public Object[][] loginDataProvider() {
        int rowCount = excel.getRowCount(0);
        System.out.println(rowCount);
        Object[][] data = new Object[rowCount][2];

        for (int i = 0; i < rowCount; i++) {
            data[i][0] = excel.getCellData(0, i + 1, 0); // Username column
            data[i][1] = excel.getCellData(0, i + 1, 1); // Password column
        }
        return data;
    }

    @Test(dataProvider = "loginData")
    public void loginTest(String username, String password) throws InterruptedException {
        test = extent.createTest("Login Test with username: " + username);

        driver.get("https://opensource-demo.orangehrmlive.com/web/index.php/auth/login");
        Thread.sleep(5000);
        // Enter username and password
        driver.findElement(By.name("username")).sendKeys(username);
        driver.findElement(By.name("password")).sendKeys(password);
        driver.findElement(By.className("oxd-button oxd-button--medium oxd-button--main orangehrm-login-button")).click();
        Thread.sleep(5000);
        // Assertion and validation
        if (username.equals("Admin") && password.equals("admin123")) {
            Assert.assertEquals(driver.getCurrentUrl(), "https://opensource-demo.orangehrmlive.com/index.php/dashboard");
            test.pass("Valid credentials - Login successful.");
            //logout();
        } else {
            WebElement errorMessage = driver.findElement(By.id("spanMessage"));
            Assert.assertTrue(errorMessage.isDisplayed(), "Error message should be displayed.");
            test.fail("Invalid credentials - Login failed as expected.");
        }
    }

	/*
	 * public void logout() { driver.findElement(By.id("welcome")).click();
	 * driver.findElement(By.linkText("Logout")).click(); }
	 */

    @AfterMethod
    public void captureScreenshotOnFailure(ITestResult result) {
        if (ITestResult.FAILURE == result.getStatus() || ITestResult.SUCCESS == result.getStatus()) {
            takeScreenshot(result.getName());
        }
    }

    public void takeScreenshot(String testName) {
        File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);
        String timestamp = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());
        String filePath = "screenshots/" + testName + "_" + timestamp + ".png";
        try {
            FileUtils.copyFile(screenshot, new File(filePath));
            test.addScreenCaptureFromPath(filePath);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

	/*
	 * @AfterClass public void tearDown() { excel.closeWorkbook(); if (driver !=
	 * null) { driver.quit(); } extent.flush(); }
	 */
}
